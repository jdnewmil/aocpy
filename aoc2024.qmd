---
title: "AOC2024"
format: html
---


# 2024

```{python}
import pathlib
import time
import timeit
import pandas as pd
from aocpy.aoc2024 import day01, day02, day03, day04, day05, day06, day07 \
    , day08, day09, day10, day11, day12, day13, day14, day15
dta_dir = pathlib.Path('data') / '2024'
```

## Day 1

### Part a


```{python}
dta = pd.read_csv(dta_dir / 'day01a.txt', sep=r"\s+", names=['L1', 'L2'])
slists = day01.pairsort1(dta['L1'].tolist(), dta['L2'].tolist())
sum(day01.diff1(*slists))
```

### Part b

```{python}
sum(day01.similarity1(dta['L1'].tolist(), dta['L2'].tolist()))
```

## Day 2

### Part a


```{python}
dta = day02.read_int_rows(dta_dir / 'day02a.txt')
safes = [day02.is_safe(v) for v in dta]
pd.Series(safes).sum()
```

### Part b

```{python}
safes2 = [day02.is_anydrop_safe(v) for v in dta]
pd.Series(safes2).sum()
```

## Day 3

### Part a

```{python}
lns = day03.read_lines(dta_dir / 'day03a.txt')
dta03 = ''.join(lns)
sum(day03.get_values_day03a(dta03))
```


### Part b

```{python}
day03.calc_day03b(day03.get_ops_day03a(dta03, ['mul', 'do', "don't"]))
```


## Day 4

### Part a

```{python}
lns = day03.read_lines(dta_dir / 'day04a.txt')
day04.count_day04a(lns)
```

### Part b

```{python}
day04.count_day04b(lns)
```

## Day 5

### Part a


```{python}
rules, updates = day05.read_rules_updates(dta_dir / 'day05a.txt')
day05.calc_day05a(rules, updates)
```

### Part b

```{python}
day05.calc_day05b(rules, updates)
```

## Day 6

### Part a

```{python}
lns = day03.read_lines(dta_dir / 'day06a.txt')
guard_initial_loc = day06.find_guard(lns)
trail = day06.map_guard_trail(lns, guard_initial_loc) # type: ignore
len(day06.get_positions(trail_set=trail))
```

### Part b

```{python}
len(day06.find_loop_positions(lns, guard_initial_loc))
```

## Day 7

### Part a

```{python}
lns = day03.read_lines(dta_dir / 'day07a.txt')
eqn_values = day07.parse_all_eqn_values(lns)
opset = {
    '*': day07.mul
    , '+': day07.plus}
day07.calc_day07a(eqn_values=eqn_values, opset=opset)
```

### Part b

```{python}
opset_b = {
    '*': day07.mul
    , '+': day07.plus
    , '||': day07.concat}
day07.calc_day07a(eqn_values=eqn_values, opset=opset_b)
```

## Day 8

### Part a

```{python}
lns = day03.read_lines(dta_dir / 'day08a.txt')
xnodes = day08.parse_trans_map(lns)
bounds = (len(lns[0]), len(lns))
day08.calc_day08a(xnodes=xnodes, bounds=bounds)
```

### Part b

```{python}
day08.calc_day08b(xnodes=xnodes, bounds=bounds)
```

## Day 9

### Part a

```{python}
lns = day03.read_lines(dta_dir / 'day09a.txt')
day09.calc_day09a(lns[0])
```

### Part b

```{python}
day09.calc_day09b(lns[0])  # ~3sec
```

## Day 10

### Part a

```{python}
lns = day03.read_lines(dta_dir / 'day10a.txt')
day10.calc_day10a(lns)
```

### Part b

```{python}
day10.calc_day10b(lns)
```

## Day 11

### Part a

```{python}
lns = day03.read_lines(dta_dir / 'day11a.txt')
day11.calc_day11a(lns[0])
```

### Part b

```{python}
day11.calc_day11b(lns[0], n=75)
```


## Day 12

### Part a

```{python}
lns = day03.read_lines(dta_dir / 'day12a.txt')
day12.calc_day12a(lns)
```

## Day 13

### Part a

```{python}
lns = day03.read_lines(dta_dir / 'day13a.txt')
day13.calc_day13a(lns)
```

### Part b

```{python}
day13.calc_day13b(lns)
```

## Day 14

### Part a

```{python}
lns = day03.read_lines(dta_dir / 'day14a.txt')
field_dim = day14.IntVec(value=(101, 103))
day14.calc_day14a(lns, field_dim)
```

```{python}
timeit.timeit(lambda: day14.calc_day14a(lns, field_dim), number=10) / 10
```

### Part b

```{python}
tol = 150
rlist = day14.parse_robots_data(lns)
timeit.timeit(lambda: day14.do_day14b((0, rlist), field_dim=field_dim, tolerance=tol), number=1)
```


```{python}
for i in range(3):
    result = day14.do_day14b(result, field_dim=field_dim, tolerance=tol)
```

## Day 15

### Part a

```{python}
lns = day03.read_lines(dta_dir / 'day15a.txt')
day15.calc_day15a(lns)
```

```{python}
timeit.timeit(lambda: day15.calc_day15a(lns), number=10) / 10
```

